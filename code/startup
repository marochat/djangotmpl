#!/bin/bash
echo project name is $DJANGO_NAME .
#
if [ -z $DJANGO_NAME ]; then
    echo env:DJANGO_NAME must be defined as project name.
    exit 1
fi

if [ ! -d $DJANGO_NAME ]; then
    echo project folder '$DJANGO_NAME' is not exist, now initialize project.
    # Initialize django project name as 
    django-admin startproject $DJANGO_NAME
    # edit settings.py
    pushd ${DJANGO_NAME}/${DJANGO_NAME}
    if [ -f settings.py ]; then
        echo Edit settings.py ....
        cat settings.py \
            | sed -r "s/^ALLOWED_HOSTS.+$/ALLOWED_HOSTS \= \['*'\]/g" > tmpfile
        rm settings.py
        mv tmpfile settings.py
    fi
    popd
fi
cd ${DJANGO_NAME}
# bootstrap などスタティック領域初期化
CUSTOM_SCSS=bootstrap-custom.scss
CUSTOM_CSS=bootstrap-custom.css
if [ ! -d 'static' ]; then mkdir static; fi
pushd static
if [ ! -d 'css' ]; then mkdir css; fi
cd css
if [ ! -d 'bootstrap' ]; then
    ln -s /usr/local/lib/node_modules/bootstrap .
fi 
if [ ! -f ${CUSTOM_SCSS} ]; then
    cat <<EOS > ${CUSTOM_SCSS}
/*
$ sass bootstrap-custom.scss bootstrap-custom.css
*/
@import "bootstrap/scss/bootstrap.scss";
EOS
fi
sass --watch ${CUSTOM_SCSS}:${CUSTOM_CSS} &
popd
pushd static
if [ ! -d 'js' ]; then mkdir js; fi
cd js
find . -maxdepth 1 -type l -delete
ln -s /usr/local/lib/node_modules/bootstrap/dist/js/* .
popd
uwsgi --socket :8001 --module ${DJANGO_NAME}.wsgi --uid www-data --py-autoreload 1
